/* com.github.jmoerman.go-for-it-0.vapi generated by valac 0.34.7, do not modify. */

namespace GOFI {
	namespace TxtUtils {
		[CCode (cheader_filename = "com.github.jmoerman.go-for-it-0.h")]
		public static string? consume_priority (ref string pseudo_description);
		[CCode (cheader_filename = "com.github.jmoerman.go-for-it-0.h")]
		public static bool consume_status (ref string txt_line);
		[CCode (cheader_filename = "com.github.jmoerman.go-for-it-0.h")]
		public static string date_to_string (GLib.DateTime date);
		[CCode (cheader_filename = "com.github.jmoerman.go-for-it-0.h")]
		public static bool is_context_tag (string token);
		[CCode (cheader_filename = "com.github.jmoerman.go-for-it-0.h")]
		public static bool is_date (string token);
		[CCode (cheader_filename = "com.github.jmoerman.go-for-it-0.h")]
		public static bool is_priority (string token);
		[CCode (cheader_filename = "com.github.jmoerman.go-for-it-0.h")]
		public static bool is_project_tag (string token);
		[CCode (cheader_filename = "com.github.jmoerman.go-for-it-0.h")]
		public static GLib.DateTime string_to_date (string date_txt);
	}
	[CCode (cheader_filename = "com.github.jmoerman.go-for-it-0.h")]
	public enum FeatureStatus {
		UNKNOWN,
		ALWAYS,
		COMMON,
		UNCOMMON,
		NEVER;
		public bool use_feature (bool _default);
		public bool config_useful ();
	}
}
[CCode (cheader_filename = "com.github.jmoerman.go-for-it-0.h")]
public class SettingsManager {
	public bool first_start;
	public SettingsManager ();
	public SettingsManager.load_from_key_file ();
	public int break_duration { get; set; }
	public bool reminder_active { get; }
	public int reminder_time { get; set; }
	public int task_duration { get; set; }
	public string todo_txt_location { owned get; set; }
	public bool use_dark_theme { get; set; }
	public bool use_header_bar { get; set; }
	public int win_height { get; set; }
	public int win_width { get; set; }
	public int win_x { get; set; }
	public int win_y { get; set; }
	public signal void timer_duration_changed ();
	public signal void todo_txt_location_changed ();
	public signal void use_dark_theme_changed (bool use_dark);
	public signal void use_header_bar_changed ();
}
[CCode (cheader_filename = "com.github.jmoerman.go-for-it-0.h")]
public class TodoTask : GLib.Object {
	public TodoTask (string line, bool done);
	public GLib.DateTime? completion_date { get; set; }
	public GLib.DateTime? creation_date { get; set; }
	public string description { get; set; }
	public bool done { get; set; }
	public string? priority { get; set; }
	public bool valid { get; }
	public signal void data_changed ();
	public signal void done_changed ();
}
[CCode (cheader_filename = "com.github.jmoerman.go-for-it-0.h")]
public class FileWatcher {
	public FileWatcher (GLib.File file);
	public bool being_updated { get; private set; }
	public GLib.File file { get; set; }
	public bool watching { get; set; }
	public signal void changed ();
}
[CCode (cheader_filename = "com.github.jmoerman.go-for-it-0.h")]
public class TaskTimer {
	public GLib.DateTime start_time;
	public TaskTimer (SettingsManager settings);
	public void end_iteration ();
	public GLib.DateTime get_runtime ();
	public void reset ();
	public void set_active_task_done ();
	public void start ();
	public void stop ();
	public void toggle_break ();
	public void update ();
	public void update_active_task ();
	public TodoTask? active_task { get; set; }
	public bool break_active { get; private set; }
	public GLib.DateTime remaining_duration { owned get; set; }
	public bool running { get; private set; }
	public signal void active_task_changed (TodoTask? task, bool break_active);
	public signal void active_task_description_changed (TodoTask task);
	public signal void active_task_done (TodoTask task);
	public signal void timer_almost_over (GLib.DateTime remaining_duration);
	public signal void timer_finished (bool break_active);
	public signal void timer_running_changed (bool running);
	public signal void timer_updated (GLib.DateTime remaining_duration);
	public signal void timer_updated_relative (double progress);
}
[CCode (cheader_filename = "com.github.jmoerman.go-for-it-0.h")]
public class DragList : Gtk.Bin {
	public DragList ();
	public void add_row (Gtk.Widget widget);
	public void bind_model (DragListModel? model, owned DragListCreateWidgetFunc? create_widget_func);
	public DragListRow get_row_at_index (int index);
	public GLib.List<weak DragListRow> get_rows ();
	public unowned DragListRow? get_selected_row ();
	public void insert_row (Gtk.Widget widget, int position);
	public void invalidate_filter ();
	public void move_row (DragListRow row, int index);
	public void remove_row (DragListRow row);
	public void select_row (DragListRow row);
	public void set_filter_func (DragListFilterFunc? filter_func);
	public Gtk.Adjustment vadjustment { get; set; }
	public virtual signal void activate_cursor_row ();
	public virtual signal void move_cursor (Gtk.MovementStep step, int count);
	public virtual signal void row_activated (DragListRow row);
	public virtual signal void row_received_with_model (DragListRow row, int index);
	public virtual signal void row_selected (DragListRow? row);
}
[CCode (cheader_filename = "com.github.jmoerman.go-for-it-0.h")]
public class DragListRow : Gtk.ListBoxRow {
	public DragListRow ();
	public unowned Gtk.Widget? get_center_widget ();
	public unowned DragList? get_drag_list_box ();
	public unowned Gtk.Widget? get_start_widget ();
	public void set_center_widget (Gtk.Widget? widget);
	public void set_start_widget (Gtk.Widget? widget);
}
[CCode (cheader_filename = "com.github.jmoerman.go-for-it-0.h")]
public class TimerView : Gtk.Grid {
	public Gtk.Button done_btn;
	public TimerView (TaskTimer timer);
	public GLib.DateTime get_timer_values ();
	public void set_running (bool running);
	public void set_time (GLib.DateTime time);
	public override void show_all ();
	public void show_no_task ();
}
[CCode (cheader_filename = "com.github.jmoerman.go-for-it-0.h")]
public class SettingsDialog : Gtk.Dialog {
	public SettingsDialog (Gtk.Window? parent, SettingsManager settings);
}
[CCode (cheader_filename = "com.github.jmoerman.go-for-it-0.h")]
public class AboutDialog : Gtk.AboutDialog {
	public AboutDialog (Gtk.Window? parent = null);
}
[CCode (cheader_filename = "com.github.jmoerman.go-for-it-0.h")]
public class ContributeDialog : Gtk.MessageDialog {
	public ContributeDialog (Gtk.Window? parent);
}
[CCode (cheader_filename = "com.github.jmoerman.go-for-it-0.h")]
public interface DragListModel : GLib.Object {
	public abstract GLib.Object? get_item (uint position);
	public abstract GLib.Type get_item_type ();
	public abstract uint get_n_items ();
	public abstract void move_item (uint old_position, uint new_position);
	public signal void item_moved (uint old_position, uint new_position);
	public signal void items_changed (uint position, uint removed, uint added);
}
[CCode (cheader_filename = "com.github.jmoerman.go-for-it-0.h")]
public delegate bool DragListFilterFunc (DragListRow row);
[CCode (cheader_filename = "com.github.jmoerman.go-for-it-0.h")]
public delegate Gtk.Widget DragListCreateWidgetFunc (GLib.Object item);
